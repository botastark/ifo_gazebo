<?xml version="1.0"?> 
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:macro name="ifo_base_macro" 
  params="mavlink_udp_port:=14560 mavlink_tcp_port:=4560">
    <!-- IFO-S BASE MACRO
    Calling this macro from a top-level xacro file will include a quadcopter
    with GPS, IMU, barometer, magnetometer, all capable of interfacing with the 
    PX4 SITL app. 
      
      TODO
    - Parameterize everything using xacro:property
    - Add conditional blocks to include certain sensors.
    - Add remaining sensors
    
    To understand this file you should really look at the URDF tutorials:
    https://wiki.ros.org/urdf/Tutorials 

    In addition to how to use URDF with Gazebo
    http://gazebosim.org/tutorials/?tut=ros_urdf 

    -->

    <xacro:include filename="$(find ifo_description)/materials/materials.xacro" />
    
    
    <!-- Base Link: Main Chassis -->
    <link name="base_link">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <visual>
        <geometry>
          <mesh filename="package://ifo_description/meshes/iris.stl" />
        </geometry>
        <material name="white"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.47 0.47 0.11"/>
        </geometry>
      </collision>
      <inertial>
          <mass value="1.5" />
          <inertia
            ixx="0.029125" ixy="0.0" ixz="0.0"
            iyy="0.029125" iyz="0.0"
            izz="0.055225"/>
      </inertial>
    </link>

    <gazebo reference="base_link">        
      <collision>
        <surface>
          <contact>
            <ode>
              <min_depth>0.001</min_depth>
              <max_vel>0</max_vel>
            </ode>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <material>Gazebo/DarkGrey</material>
      <gravity>1</gravity>
      <velocity_decay/>
    </gazebo>




    <!-- ===================================================================== -->
    <!--                               ROTOR 0                                 -->
    <!-- ===================================================================== -->
    <!-- For each rotor, we would like the visual to also show up in the
    URDF file so that we can see some propellers in rviz. This is why we first
    have a URDF-specified link and joint, followed by a repetition located 
    inside the <gazebo> tags. -->
    
    <link name='rotor_0'>
      <visual>
        <geometry>
            <cylinder length="0.01" radius="0.1"/>
        </geometry>
      </visual>
      <inertial>
        <mass value="0.005" />
        <inertia
          ixx="9.75e-07" ixy="0.0" ixz="0.0"
          iyy="0.000273104" iyz="0.0"
          izz="0.000274004"/>
      </inertial>
      
      <pose>0.13 -0.22 0.023 0 0 0</pose>
          
      <collision name='rotor_0_collision'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <cylinder>
            <length>0.005</length>
            <radius>0.128</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
    </link>

    <joint name="rotor_0_joint" type="revolute">
      <origin xyz="0.13 -0.22 0.023" rpy="0 0 0"/>
      <parent link="base_link"/>
      <child link="rotor_0"/>
      <axis xyz="0 0 1"/>
      <limit lower="-1e+16" upper="+1e+16" effort="0" velocity="0"/>
    </joint>
    
    <gazebo reference="rotor_0">
      <gravity>1</gravity>
      <visual name='rotor_0_visual'>
          <pose>0 0 0 0 0 0</pose>
          <geometry>
              <mesh>
                  <scale>1 1 1</scale>
                  <uri>$(find ifo_description)/meshes/iris_prop_cw.dae</uri>
              </mesh>
          </geometry>
          <material>
              <script>
                  <name>Gazebo/Blue</name>
                  <uri>file://media/materials/scripts/gazebo.material</uri>
              </script>
          </material>
      </visual>
      <velocity_decay/>
    </gazebo>

	<gazebo reference="rotor_0_joint">
		<dynamics>
		    <spring_reference>0</spring_reference>
		    <spring_stiffness>0</spring_stiffness>
		</dynamics>
		<use_parent_model_frame>1</use_parent_model_frame>
	</gazebo>

    <!-- ===================================================================== -->
    <!--                               ROTOR 1                                 -->
    <!-- ===================================================================== -->
    <!-- For each rotor, we would like the visual to also show up in the
    URDF file so that we can see some propellers in rviz. This is why we first
    have a URDF-specified link and joint, followed by a repetition located 
    inside the <gazebo> tags. -->
    <link name='rotor_1'>
      <visual>
        <geometry>
            <cylinder length="0.01" radius="0.1"/>
        </geometry>
      </visual>
      <inertial>
        <mass value="0.005" />
        <inertia
          ixx="9.75e-07" ixy="0.0" ixz="0.0"
          iyy="0.000273104" iyz="0.0"
          izz="0.000274004"/>
      </inertial>
      <pose>-0.13 0.2 0.023 0 0 0</pose>
      <collision name='rotor_1_collision'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <cylinder>
            <length>0.005</length>
            <radius>0.128</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact> <ode/> </contact>
          <friction> <ode/> </friction>
        </surface>
      </collision>
    </link>

      


    <joint name="rotor_1_joint" type="revolute">
      <origin xyz="-0.13 0.2 0.023" rpy="0 0 0"/>
      <parent link="base_link"/>
      <child link="rotor_1"/>
      <axis xyz="0 0 1"/>
      <limit lower="-1e+16" upper="+1e+16" effort="0" velocity="0"/>
    </joint>
    
    
    <gazebo reference="rotor_1">
      <gravity>1</gravity>
      <visual name='rotor_1_visual'>
          <pose>0 0 0 0 0 0</pose>
          <geometry>
              <mesh>
                  <scale>1 1 1</scale>
                  <uri>$(find ifo_description)/meshes/iris_prop_cw.dae</uri>
              </mesh>
          </geometry>
          <material>
              <script>
                  <name>Gazebo/DarkGrey</name>
                  <uri>file://media/materials/scripts/gazebo.material</uri>
              </script>
          </material>
      </visual>
      <velocity_decay/>
    </gazebo>

    <gazebo reference="rotor_1_joint">
      <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
      </dynamics>
      <use_parent_model_frame>1</use_parent_model_frame>
    </gazebo>
  


    <!-- ===================================================================== -->
    <!--                               ROTOR 2                                 -->
    <!-- ===================================================================== -->
    <!-- For each rotor, we would like the visual to also show up in the
    URDF file so that we can see some propellers in rviz. This is why we first
    have a URDF-specified link and joint, followed by a repetition located 
    inside the <gazebo> tags. -->
   
    
    <link name='rotor_2'>
      <visual>
        <geometry>
            <cylinder length="0.01" radius="0.1"/>
        </geometry>
      </visual>
      <inertial>
        <mass value="0.005" />
        <inertia
        ixx="9.75e-07" ixy="0.0" ixz="0.0"
        iyy="0.000273104" iyz="0.0"
        izz="0.000274004"/>
      </inertial>
      <pose>0.13 0.22 0.023 0 0 0</pose>
      <collision name='rotor_2_collision'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <cylinder>
            <length>0.005</length>
            <radius>0.128</radius>
          </cylinder>
        </geometry>
        <surface>
        <contact>
          <ode/>
        </contact>
        <friction>
          <ode/>
        </friction>
        </surface>
      </collision>
    </link>
    
    

    <joint name="rotor_2_joint" type="revolute">
      <origin xyz="0.13 0.22 0.023" rpy="0 0 0"/>
      <parent link="base_link"/>
      <child link="rotor_2"/>
      <axis xyz="0 0 1"/>
      <limit lower="-1e+16" upper="+1e+16" effort="0" velocity="0"/>
    </joint>
      
    

    <gazebo reference="rotor_2">
      <gravity>1</gravity>
      <visual name='rotor_2_visual'>
          <pose>0 0 0 0 0 0</pose>
          <geometry>
              <mesh>
                  <scale>1 1 1</scale>
                  <uri>$(find ifo_description)/meshes/iris_prop_cw.dae</uri>
              </mesh>
          </geometry>
          <material>
              <script>
                  <name>Gazebo/Blue</name>
                  <uri>file://media/materials/scripts/gazebo.material</uri>
              </script>
          </material>
      </visual>
      <velocity_decay/>
    </gazebo>


    <gazebo reference="rotor_2_joint">
      <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
      </dynamics>
      <use_parent_model_frame>1</use_parent_model_frame>

    </gazebo>
  
  



    <!-- ===================================================================== -->
    <!--                               ROTOR 3                                 -->
    <!-- ===================================================================== -->
    <!-- For each rotor, we would like the visual to also show up in the
    URDF file so that we can see some propellers in rviz. This is why we first
    have a URDF-specified link and joint, followed by a repetition located 
    inside the <gazebo> tags. -->
    <link name='rotor_3'>
      <visual>
        <geometry>
          <cylinder length="0.01" radius="0.1"/>
        </geometry>
      </visual>
      <inertial>
          <mass value="0.005" />
          <inertia
            ixx="9.75e-07" ixy="0.0" ixz="0.0"
            iyy="0.000273104" iyz="0.0"
            izz="0.000274004"/>
      </inertial>
      
      
      <pose>-0.13 -0.2 0.023 0 0 0</pose>
        <collision>
          <pose>0 0 0 0 0 0</pose>
          <geometry>
            <cylinder>
              <length>0.005</length>
              <radius>0.128</radius>
            </cylinder>
          </geometry>
          <surface>
            <contact>
              <ode/>
            </contact>
            <friction>
              <ode/>
            </friction>
          </surface>
        </collision>

        
        <velocity_decay/>
    </link>

    <joint name="rotor_3_joint" type="revolute">
      <origin xyz="-0.13 -0.2 0.023" rpy="0 0 0"/>
      <parent link="base_link"/>
      <child link="rotor_3"/>
      <axis xyz="0 0 1"/>
      <limit lower="-1e+16" upper="+1e+16" effort="0" velocity="0"/>
    </joint>

    <gazebo reference="rotor_3">
      <gravity>1</gravity>
      <visual name='rotor_3_visual'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
            <mesh>
                <scale>1 1 1</scale>
                <uri>$(find ifo_description)/meshes/iris_prop_cw.dae</uri>
            </mesh>
        </geometry>
        <material>
            <script>
                <name>Gazebo/DarkGrey</name>
                <uri>file://media/materials/scripts/gazebo.material</uri>
            </script>
        </material>
      </visual>
    </gazebo>
  
    <gazebo reference="rotor_3_joint">
      <dynamics>
              <spring_reference>0</spring_reference>
              <spring_stiffness>0</spring_stiffness>
      </dynamics>
      <use_parent_model_frame>1</use_parent_model_frame>
    </gazebo>


    <!-- ===================================================================== -->
    <!--                                GPS & IMU                              -->
    <!-- ===================================================================== -->
  
    <gazebo>
    <model name='gps0'>
        <link name='gps_link'>
          <pose>0 0 0 0 0 0</pose>
          <inertial>
            <pose>0 0 0 0 0 0</pose>
            <mass>0.01</mass>
            <inertia>
              <ixx>2.1733e-06</ixx>
              <ixy>0</ixy>
              <ixz>0</ixz>
              <iyy>2.1733e-06</iyy>
              <iyz>0</iyz>
              <izz>1.8e-07</izz>
            </inertia>
          </inertial>
          <visual name='visual'>
            <geometry>
              <cylinder>
                <radius>0.01</radius>
                <length>0.002</length>
              </cylinder>
            </geometry>
            <material>
              <script>
                <name>Gazebo/Black</name>
                <uri>__default__</uri>
              </script>
            </material>
          </visual>
          <sensor name='gps' type='gps'>
            <pose>0 0 0 0 0 0</pose>
            <plugin name='gps_plugin' filename='libgazebo_gps_plugin.so'>
              <robotNamespace/>
              <gpsNoise>1</gpsNoise>
              <gpsXYRandomWalk>2.0</gpsXYRandomWalk>
              <gpsZRandomWalk>4.0</gpsZRandomWalk>
              <gpsXYNoiseDensity>0.0002</gpsXYNoiseDensity>
              <gpsZNoiseDensity>0.0004</gpsZNoiseDensity>
              <gpsVXYNoiseDensity>0.2</gpsVXYNoiseDensity>
              <gpsVZNoiseDensity>0.4</gpsVZNoiseDensity>
            </plugin>
          </sensor>
        </link>
      </model>

      <joint name='gps0_joint' type='fixed'>
        <parent>base_link</parent>
        <child>gps0::gps_link</child>
      </joint>
    </gazebo>




    <gazebo>
      <link name='/imu_link'>
        <pose>0 0 0 0 0 0</pose>
        <inertial>
          <pose>0 0 0 0 0 0</pose>
          <mass>0.015</mass>
          <inertia>
            <ixx>1e-05</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>1e-05</iyy>
            <iyz>0</iyz>
            <izz>1e-05</izz>
          </inertia>
        </inertial>
      </link>
      
      <joint name='/imu_joint' type='revolute'>
        <child>/imu_link</child>
        <parent>base_link</parent>
        <axis>
          <xyz>1 0 0</xyz>
          <limit>
            <lower>0</lower>
            <upper>0</upper>
            <effort>0</effort>
            <velocity>0</velocity>
          </limit>
          <dynamics>
            <spring_reference>0</spring_reference>
            <spring_stiffness>0</spring_stiffness>
          </dynamics>
          <use_parent_model_frame>1</use_parent_model_frame>
        </axis>
      </joint>

    </gazebo>
   

    <!-- ===================================================================== -->
    <!--                               PLUGINS                                 -->
    <!-- ===================================================================== -->
    
    <gazebo>
      <!-- warning, the "rotor_X" link names are hard coded in this plugin.
      you cant change the link names for the rotors above.-->
      <plugin name='rosbag' filename='libgazebo_multirotor_base_plugin.so'>
        <robotNamespace/>
        <linkName>base_link</linkName>
        <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
      </plugin>
      
      
      <plugin name='front_right_motor_model' filename='libgazebo_motor_model.so'>
        <robotNamespace/>
        <jointName>rotor_0_joint</jointName>
        <linkName>rotor_0</linkName>
        <turningDirection>ccw</turningDirection>
        <timeConstantUp>0.0125</timeConstantUp>
        <timeConstantDown>0.025</timeConstantDown>
        <maxRotVelocity>1100</maxRotVelocity>
        <motorConstant>5.84e-06</motorConstant>
        <momentConstant>0.06</momentConstant>
        <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
        <motorNumber>0</motorNumber>
        <rotorDragCoefficient>0.000175</rotorDragCoefficient>
        <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
        <motorSpeedPubTopic>/motor_speed/0</motorSpeedPubTopic>
        <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
      </plugin>

      <plugin name='back_left_motor_model' filename='libgazebo_motor_model.so'>
        <robotNamespace/>
        <jointName>rotor_1_joint</jointName>
        <linkName>rotor_1</linkName>
        <turningDirection>ccw</turningDirection>
        <timeConstantUp>0.0125</timeConstantUp>
        <timeConstantDown>0.025</timeConstantDown>
        <maxRotVelocity>1100</maxRotVelocity>
        <motorConstant>5.84e-06</motorConstant>
        <momentConstant>0.06</momentConstant>
        <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
        <motorNumber>1</motorNumber>
        <rotorDragCoefficient>0.000175</rotorDragCoefficient>
        <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
        <motorSpeedPubTopic>/motor_speed/1</motorSpeedPubTopic>
        <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
      </plugin>

      <plugin name='front_left_motor_model' filename='libgazebo_motor_model.so'>
        <robotNamespace/>
        <jointName>rotor_2_joint</jointName>
        <linkName>rotor_2</linkName>
        <turningDirection>cw</turningDirection>
        <timeConstantUp>0.0125</timeConstantUp>
        <timeConstantDown>0.025</timeConstantDown>
        <maxRotVelocity>1100</maxRotVelocity>
        <motorConstant>5.84e-06</motorConstant>
        <momentConstant>0.06</momentConstant>
        <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
        <motorNumber>2</motorNumber>
        <rotorDragCoefficient>0.000175</rotorDragCoefficient>
        <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
        <motorSpeedPubTopic>/motor_speed/2</motorSpeedPubTopic>
        <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
      </plugin>

      <plugin name='back_right_motor_model' filename='libgazebo_motor_model.so'>
        <robotNamespace/>
        <jointName>rotor_3_joint</jointName>
        <linkName>rotor_3</linkName>
        <turningDirection>cw</turningDirection>
        <timeConstantUp>0.0125</timeConstantUp>
        <timeConstantDown>0.025</timeConstantDown>
        <maxRotVelocity>1100</maxRotVelocity>
        <motorConstant>5.84e-06</motorConstant>
        <momentConstant>0.06</momentConstant>
        <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
        <motorNumber>3</motorNumber>
        <rotorDragCoefficient>0.000175</rotorDragCoefficient>
        <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
        <motorSpeedPubTopic>/motor_speed/3</motorSpeedPubTopic>
        <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
      </plugin>    

      <plugin name='groundtruth_plugin' filename='libgazebo_groundtruth_plugin.so'>
        <robotNamespace/>
      </plugin>

      <plugin name='magnetometer_plugin' filename='libgazebo_magnetometer_plugin.so'>
        <robotNamespace/>
        <pubRate>100</pubRate>
        <noiseDensity>0.0004</noiseDensity>
        <randomWalk>6.4e-06</randomWalk>
        <biasCorrelationTime>600</biasCorrelationTime>
        <magTopic>/mag</magTopic>
      </plugin>

      <plugin name='barometer_plugin' filename='libgazebo_barometer_plugin.so'>
        <robotNamespace/>
        <pubRate>50</pubRate>
        <baroTopic>/baro</baroTopic>
        <baroDriftPaPerSec>0</baroDriftPaPerSec>
      </plugin>

      <!-- The mavlink_interface plugin must be loaded BEFORE the imu 
      IMU plugin or else the simulator runs very slow. -->
      <plugin name='mavlink_interface' filename='libgazebo_mavlink_interface.so'>
        <robotNamespace/>
        <imuSubTopic>/imu</imuSubTopic>
        <magSubTopic>/mag</magSubTopic>
        <baroSubTopic>/baro</baroSubTopic>
        <mavlink_addr>INADDR_ANY</mavlink_addr>
        <mavlink_tcp_port>${mavlink_tcp_port}</mavlink_tcp_port>
        <mavlink_udp_port>${mavlink_udp_port}</mavlink_udp_port>
        <serialEnabled>0</serialEnabled>
        <serialDevice>/dev/ttyACM0</serialDevice>
        <baudRate>921600</baudRate>
        <qgc_addr>INADDR_ANY</qgc_addr>
        <qgc_udp_port>14550</qgc_udp_port>
        <sdk_addr>INADDR_ANY</sdk_addr>
        <sdk_udp_port>14540</sdk_udp_port>
        <hil_mode>0</hil_mode>
        <hil_state_level>false</hil_state_level>
        <send_vision_estimation>0</send_vision_estimation>
        <send_odometry>1</send_odometry>
        <enable_lockstep>true</enable_lockstep>
        <use_tcp>true</use_tcp>
        <motorSpeedCommandPubTopic>/gazebo/command/motor_speed</motorSpeedCommandPubTopic>
        <control_channels>
          <channel name='rotor1'>
              <input_index>0</input_index>
              <input_offset>0</input_offset>
              <input_scaling>1000</input_scaling>
              <zero_position_disarmed>0</zero_position_disarmed>
              <zero_position_armed>100</zero_position_armed>
              <joint_control_type>velocity</joint_control_type>
          </channel>
          <channel name='rotor2'>
              <input_index>1</input_index>
              <input_offset>0</input_offset>
              <input_scaling>1000</input_scaling>
              <zero_position_disarmed>0</zero_position_disarmed>
              <zero_position_armed>100</zero_position_armed>
              <joint_control_type>velocity</joint_control_type>
          </channel>
          <channel name='rotor3'>
              <input_index>2</input_index>
              <input_offset>0</input_offset>
              <input_scaling>1000</input_scaling>
              <zero_position_disarmed>0</zero_position_disarmed>
              <zero_position_armed>100</zero_position_armed>
              <joint_control_type>velocity</joint_control_type>
          </channel>
          <channel name='rotor4'>
              <input_index>3</input_index>
              <input_offset>0</input_offset>
              <input_scaling>1000</input_scaling>
              <zero_position_disarmed>0</zero_position_disarmed>
              <zero_position_armed>100</zero_position_armed>
              <joint_control_type>velocity</joint_control_type>
          </channel>
          <channel name='rotor5'>
              <input_index>4</input_index>
              <input_offset>1</input_offset>
              <input_scaling>324.6</input_scaling>
              <zero_position_disarmed>0</zero_position_disarmed>
              <zero_position_armed>0</zero_position_armed>
              <joint_control_type>velocity</joint_control_type>
              <joint_control_pid>
              <p>0.1</p>
              <i>0</i>
              <d>0</d>
              <iMax>0.0</iMax>
              <iMin>0.0</iMin>
              <cmdMax>2</cmdMax>
              <cmdMin>-2</cmdMin>
              </joint_control_pid>
              <joint_name>zephyr_delta_wing::propeller_joint</joint_name>
          </channel>
          <channel name='rotor6'>
              <input_index>5</input_index>
              <input_offset>0</input_offset>
              <input_scaling>0.524</input_scaling>
              <zero_position_disarmed>0</zero_position_disarmed>
              <zero_position_armed>0</zero_position_armed>
              <joint_control_type>position</joint_control_type>
              <joint_name>zephyr_delta_wing::flap_left_joint</joint_name>
              <joint_control_pid>
              <p>10.0</p>
              <i>0</i>
              <d>0</d>
              <iMax>0</iMax>
              <iMin>0</iMin>
              <cmdMax>20</cmdMax>
              <cmdMin>-20</cmdMin>
              </joint_control_pid>
          </channel>
          <channel name='rotor7'>
              <input_index>6</input_index>
              <input_offset>0</input_offset>
              <input_scaling>0.524</input_scaling>
              <zero_position_disarmed>0</zero_position_disarmed>
              <zero_position_armed>0</zero_position_armed>
              <joint_control_type>position</joint_control_type>
              <joint_name>zephyr_delta_wing::flap_right_joint</joint_name>
              <joint_control_pid>
              <p>10.0</p>
              <i>0</i>
              <d>0</d>
              <iMax>0</iMax>
              <iMin>0</iMin>
              <cmdMax>20</cmdMax>
              <cmdMin>-20</cmdMin>
              </joint_control_pid>
          </channel>
          <channel name='rotor8'>
              <input_index>7</input_index>
              <input_offset>0</input_offset>
              <input_scaling>0.524</input_scaling>
              <zero_position_disarmed>0</zero_position_disarmed>
              <zero_position_armed>0</zero_position_armed>
              <joint_control_type>position</joint_control_type>
          </channel>
        </control_channels>
      </plugin>
      
      <plugin name='rotors_gazebo_imu_plugin' filename='libgazebo_imu_plugin.so'>
          <robotNamespace/>
          <linkName>/imu_link</linkName>
          <imuTopic>/imu</imuTopic>
          <gyroscopeNoiseDensity>0.00018665</gyroscopeNoiseDensity>
          <gyroscopeRandomWalk>3.8785e-05</gyroscopeRandomWalk>
          <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
          <gyroscopeTurnOnBiasSigma>0.0087</gyroscopeTurnOnBiasSigma>
          <accelerometerNoiseDensity>0.00186</accelerometerNoiseDensity>
          <accelerometerRandomWalk>0.006</accelerometerRandomWalk>
          <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
          <accelerometerTurnOnBiasSigma>0.196</accelerometerTurnOnBiasSigma>
      </plugin>


      
      

      <static>0</static>
    </gazebo>

    
  </xacro:macro>
</robot>
